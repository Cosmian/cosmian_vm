loader.entrypoint = "file:{{ gramine.libos }}"
# use -e to stop the script at the first error
loader.argv = [
    "/usr/bin/sh", "-ec", "/run.sh {{ domain_name }} {{ email }}"
]
libos.entrypoint = "/usr/bin/sh"
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/usr/local/lib:/usr{{ arch_libdir }}:{{ arch_libdir }}"

sys.enable_extra_runtime_domain_names_conf = true
sys.insecure__allow_eventfd = true
sgx.max_threads = 256

loader.uid = 65534
loader.gid = 65534

fs.mounts = [
    { path = "/usr/sbin", uri = "file:/usr/sbin" },
    { path = "/usr/bin", uri = "file:/usr/bin" },
    { path = "/lib", uri = "file:/lib" },
    { path = "/usr/lib", uri = "file:/usr/lib" },
    { path = "/usr/local/lib", uri = "file:{{ gramine.runtimedir() }}" },

    {#
     # Mount files for the global script
    -#}
    { path = "/run.sh", uri = "file:run.sh" },

    {#
     # Mount application directories 
    -#}
    { path = "/bin/app", uri = "file:bin/app" },

    {#
     # Mount cosmian vm agent bin and conf
    -#}
    { path = "/bin/cosmian_vm_agent", uri = "file:bin/cosmian_vm_agent" },
    { path = "/bin/cosmian_vm_certtool", uri = "file:bin/cosmian_vm_certtool" },
    { path = "/etc/cosmian_vm/agent.toml", uri = "file:etc/cosmian/agent.toml" },
    { path = "/var/lib/cosmian_vm/", uri = "file:var/", type="encrypted", key_name="_sgx_mrenclave" },

    {#
     # Mount directories for nginx
    -#}
    { path = "/etc/nginx/nginx.conf", uri = "file:etc/nginx/nginx.conf" },
    { path = "/var/log/nginx", type = "tmpfs" },
    { path = "/tmp" , type = "tmpfs" },

    {#
     # Temporary directories for nginx (cf. nginx.conf). Nginx can't mkdir() those directories,
     # and we can't create them from the glue script either, because they wouldn't survive `fork()`.
     # This is one way to create them.
    -#}
    { path = "/tmp/nginx/body", type = "tmpfs" },
    { path = "/tmp/nginx/fastcgi", type = "tmpfs" },
    { path = "/tmp/nginx/proxy", type = "tmpfs" },
    { path = "/tmp/nginx/scgi", type = "tmpfs" },
    { path = "/tmp/nginx/uwsgi", type = "tmpfs" },
]

sgx.remote_attestation = "{{ ra_type }}"
{%- if ra_type == "epid" %}
sgx.ra_client_spid = "{{ ra_client_spid }}"
sgx.ra_client_linkable = {{ 'true' if ra_client_linkable else 'false' }}
{%- endif %}

{%- if env.get("EDMM", "0") | int > 0 %}
sgx.edmm_enable = true
{%- else %}
sgx.edmm_enable = false
sgx.enclave_size = "4G"
{%- endif %}
sys.enable_sigterm_injection = true

# sgx.debug = true

sgx.trusted_files = [
    "file:{{ gramine.libos }}",
    "file:{{ gramine.runtimedir() }}/",

    "file:/usr/lib/ssl/openssl.cnf",

    "file:run.sh",
    "file:/usr/bin/sh",
    "file:bin/app",
    "file:bin/cosmian_vm_agent",
    "file:bin/cosmian_vm_certtool",

    "file:/usr/sbin/nginx",

    "file:etc/cosmian/agent.toml",
    "file:etc/nginx/nginx.conf",

    "file:/usr{{ arch_libdir }}/",
    "file:{{ arch_libdir }}/",
]