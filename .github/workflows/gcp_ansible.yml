---
name: Ansible script for GCP

on:
  workflow_call:
    inputs:
      distrib:
        required: true
        type: string
      techno:
        required: true
        type: string
      product:
        required: true
        type: string
      kms-version:
        required: true
        type: string
      ai-runner-version:
        required: true
        type: string

env:
  GCP_DEV_PROJECT: cosmian-dev
  GCP_PUBLIC_PROJECT: cosmian-public

jobs:
  test-ansible:
    name: Ansible - ${{ inputs.distrib }} - ${{ inputs.techno }} - ${{ inputs.product }}
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Create env variables
        id: env
        run: |
          TIMESTAMP="$(date -u +'%Y%m%d%H%M%S')"
          echo "TIMESTAMP=$TIMESTAMP" >> "$GITHUB_OUTPUT"
          echo "CI_INSTANCE=gh-ci-a-$TIMESTAMP-${{ inputs.product }}-${{ inputs.distrib }}-${{ inputs.techno }}" >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@v4

      - name: GCP auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_COSMIAN_DEV_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: latest

      - name: Launch GCP instance
        id: run-gcp-instance
        env:
          CI_INSTANCE: ${{ steps.env.outputs.ci_instance }}
        run: |
          set -ex

          if [ "${{ inputs.techno }}" = "sev" ]; then
            MACHINE_TYPE="n2d-standard-2"
            ZONE="europe-west4-a"
            CONFIDENTIAL_COMPUTE_TYPE="SEV_SNP"
            MIN_CPU_PLATFORM="AMD Milan"
          else
            MACHINE_TYPE="c3-standard-4"
            ZONE="us-central1-a"
            CONFIDENTIAL_COMPUTE_TYPE="TDX"
            MIN_CPU_PLATFORM="AUTOMATIC"
          fi

          if [ "${{ inputs.distrib }}" = "ubuntu" ]; then
            IMAGE_OPTIONS="--image-project=ubuntu-os-cloud --project $GCP_DEV_PROJECT"
            IMAGE_NAME="ubuntu-2404-noble-amd64-v20250606"
          else
            IMAGE_OPTIONS="--image-project=rhel-cloud --project $GCP_DEV_PROJECT"
            IMAGE_NAME="rhel-9-v20250611"
          fi

          ssh-keygen -t rsa -b 4096 -C "$CI_INSTANCE@example.com" -f $HOME/.ssh/id_rsa -q -N ""
          PUBKEY=$(cat $HOME/.ssh/id_rsa.pub)

          gcloud compute instances create $CI_INSTANCE \
            --machine-type "$MACHINE_TYPE" \
            --zone "$ZONE" \
            --min-cpu-platform="$MIN_CPU_PLATFORM" \
            --confidential-compute-type="$CONFIDENTIAL_COMPUTE_TYPE" \
            --shielded-secure-boot \
            --image="$IMAGE_NAME" \
            $IMAGE_OPTIONS \
            --tags "$CI_INSTANCE-fw" \
            --maintenance-policy=TERMINATE \
            --max-run-duration=120m \
            --instance-termination-action=DELETE \
            --boot-disk-size=20GB \
            --metadata=ssh-keys="cosmian:$PUBKEY"
          IP_ADDR=$(gcloud compute instances describe $CI_INSTANCE --format='get(networkInterfaces[0].accessConfigs[0].natIP)' --zone=$ZONE)
          echo "IP_ADDR=${IP_ADDR}" >> "$GITHUB_OUTPUT"

          # Wait for VM to be ready
          sleep 60

      - name: Create Firewall Rules for CLI Ports
        env:
          CI_INSTANCE: ${{ steps.env.outputs.ci_instance }}
        run: |
          if [ "${{ inputs.product }}" = "cosmian-vm" ]; then
            gcloud compute firewall-rules create ${CI_INSTANCE}-allow-ports-cli \
              --network=default \
              --allow=tcp:22,tcp:5555 \
              --target-tags=$CI_INSTANCE-fw
          else
            gcloud compute firewall-rules create ${CI_INSTANCE}-allow-ports-cli \
              --network=default \
              --allow=tcp:22,tcp:443,tcp:5555 \
              --target-tags=$CI_INSTANCE-fw
          fi

      - name: Ansible installation
        env:
          IP_ADDR: ${{ steps.run-gcp-instance.outputs.IP_ADDR }}
        run: |
          set -ex
          cd ansible
          python3 -m pip install -r python_modules.txt

          COSMIAN_VM_VERSION="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"

          # Set secret for Ansible to access
          echo "HF_TOKEN=${{ secrets.HF_TOKEN }}" >> $GITHUB_ENV

          export ANSIBLE_HOST_KEY_CHECKING=False
          for i in {1..1}
          do
            echo "Iteration: $i"
            ansible-playbook ${{ inputs.product }}-playbook.yml -i ${IP_ADDR}, --private-key=/home/runner/.ssh/id_rsa -u cosmian -e cosmian_vm_version=$COSMIAN_VM_VERSION -e cosmian_kms_version=${{ inputs.kms-version }} -e cosmian_ai_runner_version=${{ inputs.ai-runner-version }} --skip-tags role-cleanup
          done

      - name: Stop and delete GCP instance
        if: success() || cancelled()
        env:
          CI_INSTANCE: ${{ steps.env.outputs.ci_instance }}
        run: |
          set +e

          if [ "${{ inputs.techno }}" = "sev" ]; then
            ZONE="europe-west4-a"
          else
            ZONE="us-central1-a"
          fi

          gcloud compute instances delete --quiet $CI_INSTANCE --zone "$ZONE" --project $GCP_DEV_PROJECT
          gcloud compute firewall-rules delete ${CI_INSTANCE}-allow-ports-cli --quiet

          set -e
