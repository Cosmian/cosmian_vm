name: Build and Publish VM Image

on:
  # Only run when pull request is closed and merged into main
  pull_request:
    branches:
      - main
    types:
      - closed
  # Do not run on push except on tags
  push:
    branches-ignore:
      - "**"
    tags:
      - "**"

jobs:
  build-cosmian-vm:
    name: Build Cosmian VM Agent
    runs-on: [self-hosted, no-tee]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: geekyeggo/delete-artifact@v2
        with:
          name: cosmian_vm_agent

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y libtss2-dev

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build the agent
        run: cargo build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cosmian_vm_agent
          path: target/release/cosmian_vm_agent

      - name: Release on tags, attach asset on release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            - target/release/cosmian_vm_agent
            - target/release/cosmian_vm
            - target/release/cosmian_certtool

      - name: Push to package.cosmian.com - tags
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -x
          DESTINATION_DIR=/mnt/package/cosmian_vm/$VERSION
          ssh cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp target/release/cosmian_vm_agent target/release/cosmian_vm target/release/cosmian_certtool cosmian@package.cosmian.com:$DESTINATION_DIR/
        env:
          VERSION: ${{ github.ref_name }}

  deploy-cosmian-vm-image:
    needs: build-cosmian-vm
    name: Build Cosmian VM Image
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./packer

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: cosmian_vm_agent
          path: packer/cosmian_vm_agent

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main

      - name: Run `packer init`
        run: packer init -machine-readable gcp.pkr.hcl

      - name: Install plugins
        run: |
          packer plugins install github.com/hashicorp/amazon
          packer plugins install github.com/hashicorp/googlecompute
          packer plugins install github.com/hashicorp/ansible

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Authenticate to Google Cloud sev project
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: Build image
        run: |
          packer build -debug -var "prefix=${{github.ref_name}}" aws.pkr.hcl
          packer build -var "prefix=${{github.ref_name}}" gcp.pkr.hcl

      - name: Build image - main
        if: ${{ github.event.pull_request.merged == true && github.ref_name == 'main' }}
        run: |
          packer build -var "prefix=alpha" aws.pkr.hcl
          packer build -var "prefix=alpha" gcp.pkr.hcl

      - name: Build image - release
        if: startsWith(github.ref, 'refs/tags')
        run: |
          packer build -var "prefix=${{github.ref_name}}" aws.pkr.hcl
          packer build -var "prefix=${{github.ref_name}}" gcp.pkr.hcl
