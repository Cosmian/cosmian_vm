---
name: Build base image for AWS SEV

on:
  workflow_call:
    inputs:
      distrib:
        required: true
        type: string
      techno:
        required: true
        type: string
      product:
        required: true
        type: string
      base-version:
        required: true
        type: string

jobs:
  build-image:
    name: Packer build - ${{ inputs.distrib }} - ${{ inputs.techno }} - ${{ inputs.product }}
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: ./packer
    outputs:
      image_name: ${{ steps.env.outputs.IMAGE_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create env variables
        env:
          VERSION: ${{ inputs.base-version }}
        id: env
        run: |
          set -ex
          BASE_VERSION=$(echo $VERSION | sed 's/\./-/g; s/_/-/g; s/+/-/g')
          echo "IMAGE_NAME=${{ inputs.product }}-${BASE_VERSION}-${{ inputs.distrib }}-${{ inputs.techno }}" >> "$GITHUB_OUTPUT"

      - name: Setup packer
        uses: hashicorp/setup-packer@main

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Packer build image
        env:
          PACKER_GITHUB_API_TOKEN: ${{ secrets.PACKER_GITHUB_TOKEN }}
          IMAGE_NAME: ${{ steps.env.outputs.IMAGE_NAME }}
        run: |
          set -ex
          if [[ ${GITHUB_REF} = *'refs/tags/'* ]]; then
            export COSMIAN_VM_VERSION="${{ github.ref_name }}"
          else
            export COSMIAN_VM_VERSION="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          fi

          if [ "${{ inputs.distrib }}" = "ubuntu" ]; then
            export AMI=$(aws ec2 describe-images --filters "Name=name,Values=ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-amd64-server-20240523.1" --query "Images[*].{ID:ImageId}" --output text)
          else
            export AMI=$(aws ec2 describe-images --filters "Name=name,Values=RHEL-9.3.0_HVM-20240117-x86_64-49-Hourly2-GP3" --query "Images[*].{ID:ImageId}" --output text)
          fi

          bash ../.github/scripts/aws-packer-build.sh "${{ inputs.product }}" "${{ inputs.distrib }}" "$AMI"
