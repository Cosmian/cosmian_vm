---
name: Build Cosmian VM binaries

on: workflow_call

jobs:
  check:
    name: Rust Check
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y tpm2-tools libtss2-dev

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cargo-cache
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain and components
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cargo install cargo-machete
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run: cargo install cargo-machete

      - name: Cargo fmt
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run: cargo fmt --all -- --check

      - name: Cargo check
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run: cargo check

      - name: Clippy
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run: cargo clippy -- -D warnings

      - name: Machete (deps checker)
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run: cargo machete

  test:
    name: Rust Test
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y tpm2-tools libtss2-dev

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cargo-cache
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain and components
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cargo test
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        run: cargo test

  build:
    name: Rust Build
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y tpm2-tools libtss2-dev

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cargo-cache
        uses: Swatinem/rust-cache@v2

      - name: Install Rust toolchain and components
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cargo build
        run: cargo build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cosmian_vm
          path: |
            CHANGELOG.md
            target/release/cosmian_vm_agent
            target/release/cosmian_vm
            target/release/cosmian_certtool
          retention-days: 10
          if-no-files-found: error

  push:
    needs: build
    name: package.cosmian.com
    runs-on: [self-hosted, no-tee]
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: cosmian_vm

      - name: Push latest build to package.cosmian.com
        run: |
          set -x
          export BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          DESTINATION_DIR=/mnt/package/cosmian_vm/last_build/${BRANCH}
          ssh cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp target/release/cosmian_vm_agent target/release/cosmian_vm target/release/cosmian_certtool cosmian@package.cosmian.com:$DESTINATION_DIR/

      - name: Push version tag to package.cosmian.com
        if: startsWith(github.ref, 'refs/tags/')
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          set -x
          DESTINATION_DIR=/mnt/package/cosmian_vm/$VERSION
          ssh cosmian@package.cosmian.com mkdir -p $DESTINATION_DIR
          scp target/release/cosmian_vm_agent target/release/cosmian_vm target/release/cosmian_certtool cosmian@package.cosmian.com:$DESTINATION_DIR/

  audit:
    name: Rust Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cargo cache
        uses: actions/cache@v4
        id: cargo-cache
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: rust-audit-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        if: steps.cargo-cache.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@stable

      - name: Cargo audit
        uses: rustsec/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
