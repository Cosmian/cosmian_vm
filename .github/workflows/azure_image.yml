---
name: Build and test image for Azure SEV

on:
  workflow_call:
    inputs:
      distrib:
        required: true
        type: string
      techno:
        required: true
        type: string
      product:
        required: true
        type: string
      kms-version:
        required: true
        type: string
      ai-runner-version:
        required: true
        type: string
      base-version:
        required: true
        type: string

env:
  RESOURCE_GROUP: packer-snp
  RUST_LOG: cosmian_vm=trace

jobs:
  build-image:
    name: (AZURE) ${{ inputs.product }} - ${{ inputs.distrib }} - ${{ inputs.techno }}
    secrets: inherit
    uses: ./.github/workflows/azure_packer_build.yml
    with:
      techno: ${{ inputs.techno }}
      distrib: ${{ inputs.distrib }}
      product: ${{ inputs.product }}
      base-version: ${{ inputs.base-version }}
      kms-version: ${{ inputs.kms-version }}
      ai-runner-version: ${{ inputs.ai-runner-version }}

  test-image:
    name: Test image - ${{ inputs.distrib }} - ${{ inputs.techno }} - ${{ inputs.product }}
    runs-on: ubuntu-22.04
    needs: build-image
    permissions:
      contents: read
      id-token: write
    outputs:
      timestamp: ${{ steps.env.outputs.TIMESTAMP }}
      ci_instance: ${{ steps.env.outputs.CI_INSTANCE }}
    steps:
      - name: Create env variables
        id: env
        run: |
          TIMESTAMP="$(date -u +'%Y%m%d%H%M%S')"
          echo "TIMESTAMP=$TIMESTAMP" >> "$GITHUB_OUTPUT"
          echo "CI_INSTANCE=gh-ci-$TIMESTAMP-${{ inputs.product }}-${{ inputs.distrib }}-${{ inputs.techno }}" >> "$GITHUB_OUTPUT"

      - name: Update Ubuntu runner - required for Cosmian VM CLI installation
        run: sudo apt update

      - name: Checkout
        uses: actions/checkout@v4

      - name: Az CLI login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS_JSON }}

      - name: Launch Azure instance
        id: run-azure-instance
        env:
          CI_INSTANCE: ${{ steps.env.outputs.CI_INSTANCE }}
        run: |
          set -exo pipefail

          IMAGE_VERSION="0.0.0"
          if [[ ${GITHUB_REF} = *'refs/tags/'* ]]; then
            if [ "${{ inputs.product }}" = "cosmian-vm" ]; then
              IMAGE_VERSION="${GITHUB_REF_NAME}"
            elif [ "${{ inputs.product }}" = "kms" ]; then
              IMAGE_VERSION="${{ inputs.kms-version }}"
            else
              IMAGE_VERSION="${{ inputs.ai-runner-version }}"
            fi
          fi

          if [ "${{ inputs.techno }}" = "sev" ]; then
            VM_SIZE="Standard_DC2ads_v5"
          else
            # TDX
            VM_SIZE="Standard_DC2es_v5"
          fi

          IMAGE_TO_INSTANTIATE="/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Compute/galleries/cosmian_packer/images/${{ inputs.product }}-${{ inputs.distrib }}-${{ inputs.techno }}/versions/${IMAGE_VERSION}"

          timeout 30m bash -c "until az vm create -g $RESOURCE_GROUP -n $CI_INSTANCE \
            --image ${IMAGE_TO_INSTANTIATE} \
            --security-type ConfidentialVM \
            --os-disk-security-encryption-type VMGuestStateOnly \
            --size $VM_SIZE \
            --enable-vtpm true \
            --enable-secure-boot true \
            --nic-delete-option delete \
            --os-disk-delete-option delete \
            --data-disk-delete-option delete \
            --admin-username cosmian \
            --generate-ssh-keys; do sleep 60; done"

          if [ "${{ inputs.product }}" = "cosmian-vm" ]; then
            az vm open-port -g $RESOURCE_GROUP -n $CI_INSTANCE --priority 100 --port 5555
          elif [ "${{ inputs.product }}" = "ai-runner" ]; then
            az vm open-port -g $RESOURCE_GROUP -n $CI_INSTANCE --priority 100 --port 5555,443
          else
            az vm open-port -g $RESOURCE_GROUP -n $CI_INSTANCE --priority 100 --port 5555,443
          fi

          IP_ADDR=$(az vm show -d -g $RESOURCE_GROUP -n $CI_INSTANCE --query publicIps -o tsv)
          echo "IP_ADDR=${IP_ADDR}" >> "$GITHUB_OUTPUT"
          timeout 20m bash -c "until nc -z $IP_ADDR 22; do sleep 60; done"

      - name: Check Cosmian VM
        env:
          IP_ADDR: ${{ steps.run-azure-instance.outputs.IP_ADDR }}
        run: |
          set -ex

          if [[ ${GITHUB_REF} = *'refs/tags/'* ]]; then
            COSMIAN_VM_VERSION="${{ github.ref_name }}"
          else
            COSMIAN_VM_VERSION="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          fi

          cd ansible
          python3 -m pip install -r python_modules.txt

          COSMIAN_VM_VERSION="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"

          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook ${{ inputs.product }}-playbook.yml -i ${IP_ADDR}, -u cosmian -e cosmian_vm_version=$COSMIAN_VM_VERSION -e cosmian_kms_version=${{ inputs.kms-version }} -e cosmian_ai_runner_version=${{ inputs.ai-runner-version }} --tags check-${{ inputs.product }}

      - name: Stop and delete Azure instance
        if: success() || cancelled()
        env:
          CI_INSTANCE: ${{ steps.env.outputs.CI_INSTANCE }}
        run: |
          set -x
          set +e
          az vm delete -g $RESOURCE_GROUP -n $CI_INSTANCE --yes
          az network public-ip delete -g $RESOURCE_GROUP -n ${CI_INSTANCE}PublicIP
          az network nsg delete --resource-group $RESOURCE_GROUP -n ${CI_INSTANCE}NSG
