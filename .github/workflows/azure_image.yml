---
name: Build and test image for Azure SEV

on:
  workflow_call:
    inputs:
      distrib:
        required: true
        type: string
      techno:
        required: true
        type: string
      product:
        required: true
        type: string
      kms-version:
        required: true
        type: string

env:
  RESOURCE_GROUP: packer-snp
  VM_SIZE: Standard_DC2ads_v5

jobs:
  build-image:
    name: Packer build - ${{ inputs.distrib }} - ${{ inputs.techno }} - ${{ inputs.product }}
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    defaults:
      run:
        working-directory: ./packer
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup packer
        uses: hashicorp/setup-packer@main

      - name: Install packer plugins
        run: |
          packer plugins install github.com/hashicorp/azure
          packer plugins install github.com/hashicorp/ansible

      - name: Packer build image
        if: startsWith(github.ref, 'refs/tags/') != true
        env:
          KMS_VERSION: ${{ inputs.kms-version }}
          CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: |
          set -ex
          COSMIAN_VM_VERSION="last_build/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          bash ../.github/scripts/azure_packer_build.sh "${{ inputs.product }}" "${{ inputs.distrib }}" "$COSMIAN_VM_VERSION"

      - name: Packer build image
        if: startsWith(github.ref, 'refs/tags/')
        env:
          VERSION: ${{ github.ref_name }}
          KMS_VERSION: ${{ inputs.kms-version }}
          CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}"
        run: |
          set -ex
          COSMIAN_VM_VERSION="$VERSION"
          bash ../.github/scripts/azure_packer_build.sh "${{ inputs.product }}" "${{ inputs.distrib }}" "$COSMIAN_VM_VERSION"

  test-image:
    name: Test image - ${{ inputs.distrib }} - ${{ inputs.techno }} - ${{ inputs.product }}
    runs-on: ubuntu-22.04
    needs: build-image
    permissions:
      contents: read
      id-token: write
    outputs:
      timestamp: ${{ steps.env.outputs.TIMESTAMP }}
      image_name: ${{ steps.env.outputs.IMAGE_NAME }}
      ci_instance: ${{ steps.env.outputs.CI_INSTANCE }}
    steps:
      - name: Create env variables
        id: env
        run: |
          TIMESTAMP="$(date -u +'%Y%m%d%H%M%S')"
          echo "TIMESTAMP=$TIMESTAMP" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=temp-$TIMESTAMP-${{ inputs.product }}-${{ inputs.distrib }}-${{ inputs.techno }}" >> "$GITHUB_OUTPUT"
          echo "CI_INSTANCE=gh-ci-$TIMESTAMP-${{ inputs.product }}-${{ inputs.distrib }}-${{ inputs.techno }}" >> "$GITHUB_OUTPUT"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Az CLI login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDS_JSON }}

      - name: Launch Azure instance
        id: run-azure-instance
        env:
          IMAGE_NAME: ${{ steps.env.outputs.IMAGE_NAME }}
          CI_INSTANCE: ${{ steps.env.outputs.CI_INSTANCE }}
        run: |
          set -ex
          nsg_name="network_security_group"

          az vm create -g $RESOURCE_GROUP \
            -n $CI_INSTANCE \
            --image /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Compute/galleries/cosmian_packer/images/${{ inputs.product }}-${{ inputs.distrib }} \
            --security-type ConfidentialVM \
            --os-disk-security-encryption-type VMGuestStateOnly \
            --size $VM_SIZE \
            --enable-vtpm true \
            --enable-secure-boot true \
            --nsg $nsg_name \
            --generate-ssh-keys

          az network nsg rule create --nsg-name $nsg_name --resource-group $RESOURCE_GROUP \
            --name allow-ports \
            --priority 100 --access Allow --direction Inbound --protocol Tcp \
            --source-address-prefix '*' --source-port-range '*' \
            --destination-address-prefix '*' --destination-port-ranges 80 443 5355 8080 \
            --description "Allow inbound traffic on ports 443, 5355, and 8080"

          IP_ADDR=$(az vm show -d -g $RESOURCE_GROUP -n $CI_INSTANCE --query publicIps -o tsv)
          echo "IP_ADDR=${IP_ADDR}" >> "$GITHUB_OUTPUT"

      - name: Download Cosmian VM CLI
        if: startsWith(github.ref, 'refs/tags/') != true
        run: |
          export BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          wget https://package.cosmian.com/cosmian_vm/last_build/$BRANCH/cosmian_vm

      - name: Download Cosmian VM CLI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          wget https://package.cosmian.com/cosmian_vm/$VERSION/cosmian_vm

      - name: Change permissions of binaries
        run: |
          set -e
          chmod +x ./cosmian_vm

      - name: Test Cosmian VM Agent on Azure instance
        id: test_cosmian_vm
        env:
          CI_INSTANCE: ${{ steps.env.outputs.CI_INSTANCE }}
          IP_ADDR: ${{ steps.run-azure-instance.outputs.IP_ADDR }}
        run: |
          set -ex
          bash .github/scripts/azure-${{ inputs.product }}-tests.sh "$CI_INSTANCE" "$IP_ADDR"

      - name: Stop and delete Azure instance
        if: success() || failure() || cancelled()
        env:
          CI_INSTANCE: ${{ steps.env.outputs.CI_INSTANCE }}
        run: |
          set -x
          set +e
          # az network public-ip delete -g $RESOURCE_GROUP -n $CI_INSTANCE
          az vm delete -g $RESOURCE_GROUP -n $CI_INSTANCE --yes
